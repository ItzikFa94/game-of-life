{"version":3,"sources":["hoc/Auxiliary/Auxiliary.js","hoc/Layout/Layout.js","components/Board/Cell/Cell.js","components/Board/Board.js","containers/Patterns/PatternFactory.js","components/BoardControls/BornSurviveControls/checkBoxesGroup/checkBoxesGroup.js","components/BoardControls/BornSurviveControls/BornSurviveControls.js","components/BoardControls/PatternsList/PatternsList.js","containers/AboutAndRules/AboutAndRules.js","components/BoardControls/BoardConrtols.js","containers/GameOfLife.js","App.js","serviceWorker.js","index.js"],"names":["aux","props","children","Layout","className","classes","Content","this","Component","cell","styleClasses","status","onClick","clicked","Board","rows","grid","map","row","i","key","col","j","squareOnClickHandler","PatternFactory","patterns","Block","Beehive","Blinker","Glider","GosperGliderGun","Pulsar","name","NEIGHBOURS","checkBoxesGroup","options","n","Checkbox","value","updatelistfunction","label","checked","checkedValuesList","includes","firstRow","splice","secondRow","title","colSpan","toUpperCase","slice","lenght","changeBornSurvive","updateBornHandler","bornList","updateSurviveHandler","surviveList","availablePatterns","text","size","patternsList","Dropdown","floating","labeled","button","icon","onChange","onChangeHandler","Menu","Header","content","Divider","p","Item","description","panes","menuItem","render","Tab","Pane","attached","class","aboutAndRules","menu","secondary","pointing","boardControls","oneRound","playGame","stopGame","setRandomBoard","PatternsList","placePatternsHadler","resetBoard","updateBorn","updateSurvive","prototype","PropTypes","func","array","STATUS","GameOfLife","state","cols","Array","fill","born","survive","run","Delay","emptyGrid","newBorn","indexOf","push","setState","newSurvive","oneCycle","count","a","performance","now","newGrid","countNeighbours","b","console","log","sum","onClickSquareHandler","currState","resizeColsHandler","addition","newSize","resizeRowsHandler","resizeRowAndColHandler","pattern","block","buildAPatternByName","k","l","length","timerID","setInterval","clearInterval","Math","floor","random","style","backgroundColor","as","color","dividing","textAlign","subheader","BoardConrtols","addRow","addCol","addRowCol","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"yWAEeA,EAFH,SAACC,GAAD,OAAWA,EAAMC,U,kBCcdC,E,uKARX,OACE,kBAAC,EAAD,KACE,0BAAMC,UAAWC,IAAQC,SAAUC,KAAKN,MAAMC,e,GALjCM,a,iBCGNC,G,OAJF,SAACR,GACZ,IAAIS,EAAeT,EAAMU,OAAS,QAAU,OAC5C,OAAO,wBAAIP,UAAW,QAAQM,EAAcE,QAASX,EAAMY,YC6B9CC,G,8KA1BH,IAAD,OACDC,EAAOR,KAAKN,MAAMe,KAAKC,KAAI,SAACC,EAAKC,GACrC,OACE,wBAAIC,IAAK,OAASD,GACfD,EAAID,KAAI,SAACI,EAAKC,GACb,OACE,kBAAC,EAAD,CACEF,IAAKD,EAAI,IAAMG,EACfX,OAAkC,IAA1B,EAAKV,MAAMe,KAAKG,GAAGG,GAC3BT,QAAS,kBAAM,EAAKZ,MAAMsB,qBAAqBJ,EAAGG,aAO9D,OACE,kBAAC,EAAD,KACE,2BAAOlB,UAAU,SACf,+BAAQW,S,GArBEP,cC0XLgB,E,WA7Xb,aAAe,oBACbjB,KAAKkB,SAAW,CACdC,MAAO,CACL,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,QAAS,CACP,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEZC,QAAS,CAAC,CAAC,EAAG,EAAG,IACjBC,OAAQ,CACN,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAETC,gBAAiB,CACf,CAAC,EAAE,EAAE,EACH,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEF,CACE,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEF,CACE,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEF,CACE,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEF,CACE,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEF,CACE,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEF,CACE,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEF,CACE,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEF,CACE,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,E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","file":"static/js/main.21324d40.chunk.js","sourcesContent":["const aux = (props) => props.children;\r\n\r\nexport default aux;","import React, { Component } from \"react\";\r\nimport Aux from \"../Auxiliary/Auxiliary\";\r\nimport classes from \"./Layout.css\";\r\nclass Layout extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <main className={classes.Content}>{this.props.children}</main>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport \"./Cell.css\";\r\nconst cell = (props) => {\r\n  let styleClasses = props.status ? \"Alive\" : \"Dead\";\r\n  return <td className={\"Cell \"+styleClasses} onClick={props.clicked}></td>;\r\n};\r\nexport default cell;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/Auxiliary/Auxiliary\";\r\nimport Cell from \"./Cell/Cell\";\r\nimport \"./Board.css\";\r\n\r\nclass Board extends Component {\r\n\r\n  render() {\r\n    const rows = this.props.grid.map((row, i) => {\r\n      return (\r\n        <tr key={\"row_\" + i}>\r\n          {row.map((col, j) => {\r\n            return (\r\n              <Cell\r\n                key={i + \"_\" + j}\r\n                status={this.props.grid[i][j] === 0 ? false : true}\r\n                clicked={() => this.props.squareOnClickHandler(i, j)}\r\n              />\r\n            );\r\n          })}\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <Aux>\r\n        <table className=\"Board\">\r\n          <tbody>{rows}</tbody>\r\n        </table>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","\r\nclass PatternFactory {\r\n  constructor() {\r\n    this.patterns = {\r\n      Block: [\r\n        [1, 1],\r\n        [1, 1],\r\n      ],\r\n      Beehive: [\r\n        [0, 1, 1, 0],\r\n        [1, 0, 0, 1],\r\n        [0, 1, 1, 0],\r\n      ],\r\n      Blinker: [[1, 1, 1]],\r\n      Glider: [\r\n        [0, 1, 0],\r\n        [0, 0, 1],\r\n        [1, 1, 1],\r\n      ],\r\n      GosperGliderGun: [\r\n        [0,0,0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n        ],\r\n        [\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          0,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n        ],\r\n        [\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n        ],\r\n        [\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n        ],\r\n        [\r\n          1,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n        ],\r\n        [\r\n          1,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          0,\r\n          1,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          0,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n        ],\r\n        [\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n        ],\r\n        [\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n        ],\r\n        [\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n        ],\r\n      ],\r\n      Pulsar: [\r\n        [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n        [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n        [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n        [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],\r\n        [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n        [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n        [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],\r\n      ],\r\n    };\r\n  }\r\n\r\n  buildAPatternByName(name) {\r\n    return [...this.patterns[name]];\r\n  }\r\n}\r\n\r\nexport default PatternFactory;\r\n","import React from \"react\";\r\nimport \"./checkBoxesGroup.css\";\r\nimport { Checkbox } from 'semantic-ui-react'\r\n\r\nconst NEIGHBOURS = [1, 2, 3, 4, 5, 6, 7, 8];\r\n\r\nconst checkBoxesGroup = (props) => {\r\n  const options = NEIGHBOURS.map((n) => {\r\n    return (\r\n      <td key={\"td\" + n}>\r\n        <div key={\"div\"+n} className=\"ui checkbox\">\r\n          <Checkbox\r\n            key={\"cb\" + n}\r\n            value={n}\r\n            onClick={() => props.updatelistfunction(n)}\r\n            label={n}\r\n            checked={props.checkedValuesList.includes(n) ? true : false}\r\n          />\r\n        </div>\r\n      </td>\r\n    );\r\n  });\r\n\r\n  const firstRow = <tr>{options.splice(0, 4)}</tr>;\r\n  const secondRow = <tr>{options.splice(0, 8)}</tr>;\r\n\r\n  return (\r\n    <table className={props.title}>\r\n      <thead>\r\n        <tr>\r\n          <th colSpan={4}>\r\n            {props.title[0].toUpperCase() +\r\n              props.title.slice(1, props.title.lenght)}\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {firstRow}\r\n        {secondRow}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default checkBoxesGroup;\r\n","import React from \"react\";\r\nimport CheckBoxesGroup from \"./checkBoxesGroup/checkBoxesGroup\";\r\n\r\nconst changeBornSurvive = (props) => (\r\n  <tr>\r\n    <td>\r\n      <CheckBoxesGroup\r\n        title=\"born\"\r\n        updatelistfunction={props.updateBornHandler}\r\n        checkedValuesList={props.bornList}\r\n      />\r\n    </td>\r\n    <td>\r\n      <CheckBoxesGroup\r\n        title=\"survive\"\r\n        updatelistfunction={props.updateSurviveHandler}\r\n        checkedValuesList={props.surviveList}\r\n      />\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport default changeBornSurvive;\r\n","import React from \"react\";\r\nimport { Dropdown} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nconst availablePatterns = [\r\n  { key: 1, text: \"Block\", value: \"Block\", size: \"2x2\"},\r\n  { key: 2, text: \"Beehive\", value: \"Beehive\", size:\"2x2\" },\r\n  { key: 3, text: \"Blinker\", value: \"Blinker\", size:\"2x2\"},\r\n  { key: 4, text: \"Glider\", value: \"Glider\", size:\"2x2\"},\r\n  { key: 5, text: \"Gosper Glider Gun\", value: \"GosperGliderGun\", size:\"2x2\"},\r\n  { key: 6, text: \"Pulsar\", value: \"Pulsar\", size:\"2x2\"},\r\n];\r\nconst patternsList = (props) => (\r\n    <Dropdown\r\n    text='Place A Pattern'\r\n    floating\r\n    labeled\r\n    button\r\n    icon='magic'\r\n    className='icon violet'\r\n    onChange={props.onChangeHandler}\r\n  >\r\n    <Dropdown.Menu>\r\n      <Dropdown.Header content='Choose a pattern from the list below' />\r\n      <Dropdown.Divider />\r\n      {availablePatterns.map((p) => {\r\n        return (<Dropdown.Item key={p.key} description={p.size} text={p.text} value={p.value} onClick={()=>{props.onChangeHandler(p.value)}}/>);\r\n      })}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n);\r\n\r\nexport default patternsList;\r\n","import React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport \"./AboutAndRules.css\";\r\nconst panes = [\r\n  {\r\n    menuItem: \"About Conway's Game Of Life\",\r\n    render: () => (\r\n      <Tab.Pane attached={false}>\r\n        <div className=\"wrapped\">\r\n          <p>\r\n            The Game of Life is a cellular automaton devised by the British\r\n            mathematician, John Horton Conway in 1970.\r\n          </p>\r\n          <p>\r\n            It is a zero-player game, meaning that its evolution is determined\r\n            by its initial state, requiring no further input. One interacts with\r\n            the Game of Life by creating an initial configuration and observing\r\n            how it evolves. It is Turing complete and can simulate a universal\r\n            constructor\r\n          </p>\r\n          <p>\r\n            The universe of the Game of Life is an infinite, two-dimensional\r\n            orthogonal grid of square cells, each of which is in one of two\r\n            possible states, LIVE or DEAD.\r\n          </p>\r\n          <p>\r\n            Every cell interacts with its eight neighbors, which are the cells\r\n            that are horizontally, vertically, or diagonally adjacent. At each\r\n            step in time, the following transitions occur:\r\n          </p>\r\n          <ol>\r\n            <li>\r\n              Any live cell with fewer than X living neighbors dies, as if by\r\n              underpopulation.\r\n            </li>\r\n            <li>\r\n              Any live cell with X living neighbors lives on to the next\r\n              generation.\r\n            </li>\r\n            <li>\r\n              Any live cell with more than X living neighbors dies, as if by\r\n              overpopulation.\r\n            </li>\r\n            <li>\r\n              Any dead cell with exactly Y living neighbors becomes a live cell,\r\n              as if by reproduction.\r\n            </li>\r\n          </ol>\r\n          <p>X, Y reffering to groups of numbers [1 to 8]</p>\r\n        </div>\r\n      </Tab.Pane>\r\n    ),\r\n  },\r\n  {\r\n    menuItem: \"Guide, How to Play\",\r\n    render: () => (\r\n      <Tab.Pane attached={false}>\r\n        <div className=\"wrapped\">\r\n          <p>\r\n            Live cell will be colored <strong className=\"green\">Green</strong>{\" \"}\r\n            while Dead cell will be colored{\" \"}\r\n            <strong className=\"blue\">Blue</strong>.\r\n          </p>\r\n          <p>\r\n          Clicking on a cell will change its status to the other, meaning Dead cell will become Alive and Live Cell will become Dead\r\n          </p>\r\n          <p>\r\n            Using \"Random\" bottom will set the board randomly with chance of 50%\r\n            to each cell to become alive.\r\n          </p>\r\n          <p>\r\n            Using \"Place A Pattern\" bottom will allow you to set a special\r\n            pattern.\r\n          </p>\r\n          <p>\"One Round\" will set the new generation according to the rules.</p>\r\n          <p>\"Start Evolve\" will run new generations.</p>\r\n          <p>\"Pause\" will pause making new generations.</p>\r\n          <p>\"Clean Board\" will set all cells to Dead.</p>\r\n          <p>\r\n            \"Born\" and \"Survive\" will set the amount of alive neighbors needed\r\n            for the following generations.\r\n          </p>\r\n        </div>\r\n      </Tab.Pane>\r\n    ),\r\n  },\r\n  {\r\n    menuItem: \"About Me & Project\",\r\n    render: () => (\r\n      <Tab.Pane attached={false}>\r\n        <div className=\"wrapped\">\r\n          <p>\r\n          Hello, My name is Itzik from Israel <i class=\"israel flag\"></i>\r\n          </p>\r\n          <p>This is my first project programed with JavaScript and React framework.</p>\r\n          <p>For styling this project I've used \"Semantic UI\" package.</p>\r\n          <p>Hope you'll enjoy my work!</p>\r\n        </div>\r\n      </Tab.Pane>\r\n    ),\r\n  },\r\n];\r\nconst aboutAndRules = (props) => (\r\n  <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\r\n);\r\n\r\nexport default aboutAndRules;\r\n","import React from \"react\";\r\nimport ChangeBornSurvive from \"./BornSurviveControls/BornSurviveControls\";\r\nimport Aux from \"../../hoc/Auxiliary/Auxiliary\";\r\nimport PropTypes from \"prop-types\";\r\nimport PatternsList from \"./PatternsList/PatternsList\";\r\nimport AboutAndRules from \"../../containers/AboutAndRules/AboutAndRules\";\r\n\r\nconst boardControls = (props) => (\r\n  <Aux>\r\n    <table>\r\n    <tr>\r\n    <td colSpan=\"2\">\r\n    <AboutAndRules/>\r\n    <br/>\r\n    </td></tr>\r\n      <tr>\r\n        <td colSpan=\"2\">\r\n          <button\r\n            className=\"ui labeled icon teal button\"\r\n            onClick={props.oneRound}\r\n          >\r\n            <i class=\"step forward icon\"></i>One Round\r\n          </button>\r\n          <button\r\n            className=\"ui labeled icon blue button\"\r\n            onClick={props.playGame}\r\n          >\r\n            <i className=\"play icon\"></i>Start Evolve\r\n          </button>ְּ\r\n          <button\r\n            className=\"ui labeled icon olive button\"\r\n            onClick={props.stopGame}\r\n          >ּ\r\n            <i className=\"pause icon\"></i>Pause Game\r\n          </button>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td colSpan=\"2\">\r\n          <button\r\n            className=\"ui labeled icon purple button\"\r\n            onClick={props.setRandomBoard}\r\n          >\r\n            <i className=\"random icon\"></i>Random\r\n          </button>\r\n\r\n          <PatternsList onChangeHandler={props.placePatternsHadler} />\r\n\r\n          <button className=\"ui labeled icon red button\" onClick={props.resetBoard}>\r\n            <i className=\"trash alternate icon\"></i>Clean Board\r\n          </button>\r\n        </td>\r\n      </tr>\r\n      <ChangeBornSurvive\r\n      updateBornHandler={props.updateBorn}\r\n      bornList={props.bornList}\r\n      updateSurviveHandler={props.updateSurvive}\r\n      surviveList={props.surviveList}\r\n    />\r\n\r\n    </table>\r\n    \r\n  </Aux>\r\n);\r\n\r\nexport default boardControls;\r\n\r\nboardControls.prototype = {\r\n  updateBornHandler: PropTypes.func,\r\n  bornList: PropTypes.array,\r\n  updateSurviveHandler: PropTypes.func,\r\n  surviveList: PropTypes.array,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Board from \"../components/Board/Board\";\r\nimport PatternFactory from \"./Patterns/PatternFactory\";\r\nimport BoardConrtols from \"../components/BoardControls/BoardConrtols\";\r\nimport { Header } from \"semantic-ui-react\";\r\nconst STATUS = {\r\n  ALIVE: 1,\r\n  DEAD: 0,\r\n};\r\n\r\nclass GameOfLife extends Component {\r\n  state = {\r\n    size: { rows: 50, cols: 70 },\r\n    grid: Array(50)\r\n      .fill()\r\n      .map(() => Array(70).fill(0)),\r\n    born: [3],\r\n    survive: [2, 3],\r\n    PatternFactory: new PatternFactory(),\r\n    run: false,\r\n    Delay: 250,\r\n    emptyGrid: Array(50)\r\n      .fill()\r\n      .map(() => Array(70).fill(0)),\r\n  };\r\n\r\n  updateBornHandler = (n) => {\r\n    let newBorn = [...this.state.born];\r\n    let i = newBorn.indexOf(n);\r\n    if (i === -1) {\r\n      newBorn.push(n);\r\n    } else newBorn.splice(i, 1);\r\n    this.setState({ born: newBorn });\r\n  };\r\n\r\n  updateSurviveHandler = (n) => {\r\n    let newSurvive = [...this.state.survive];\r\n    let i = newSurvive.indexOf(n);\r\n    if (i === -1) {\r\n      newSurvive.push(n);\r\n    } else newSurvive.splice(i, 1);\r\n    this.setState({ survive: newSurvive });\r\n  };\r\n\r\n  oneCycle = () => {\r\n    let a = performance.now();\r\n    let newGrid = Array(50)\r\n      .fill()\r\n      .map(() => Array(70).fill(0));\r\n    let count;\r\n    for (let i = 0; i < this.state.size.rows; i++) {\r\n      for (let j = 0; j < this.state.size.cols; j++) {\r\n        count = this.countNeighbours(i, j);\r\n        if (this.state.grid[i][j] === STATUS[\"ALIVE\"]) {\r\n          if (!this.state.survive.includes(count)) {\r\n            newGrid[i][j] = STATUS[\"DEAD\"];\r\n          } else {\r\n            newGrid[i][j] = STATUS[\"ALIVE\"];\r\n          }\r\n        } else {\r\n          if (this.state.born.includes(count)) {\r\n            newGrid[i][j] = STATUS[\"ALIVE\"];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({ grid: newGrid });\r\n    let b = performance.now();\r\n    console.log(\"OneCycle: oneCycle took \" + (b - a) + \" ms\");\r\n  };\r\n\r\n  countNeighbours = (row, col) => {\r\n    let sum = 0;\r\n    for (let i = -1; i <= 1; i++) {\r\n      if (row + i >= 0 && row + i < this.state.size.rows) {\r\n        for (let j = -1; j <= 1; j++) {\r\n          if (col + j >= 0 && col + j < this.state.size.cols) {\r\n            sum = sum + this.state.grid[row + i][col + j];  \r\n          }\r\n        }\r\n      }\r\n    }\r\n    return sum - this.state.grid[row][col];\r\n  };\r\n\r\n  onClickSquareHandler = (i, j) => {\r\n    const currState = [...this.state.grid];\r\n    currState[i][j] = 1 - currState[i][j];\r\n    this.setState({ grid: currState });\r\n  };\r\n\r\n  resizeColsHandler = (addition) => {\r\n    let newSize = { ...this.state.size };\r\n    newSize.cols = newSize.cols + addition;\r\n\r\n    let newGrid = [...this.state.grid];\r\n    for (let i = 0; i < addition; i++) {\r\n      for (let j = 0; j < this.state.size.rows; j++) {\r\n        newGrid[j].push(0);\r\n      }\r\n    }\r\n    this.setState({ size: newSize, grid: newGrid });\r\n  };\r\n\r\n  resizeRowsHandler = (addition) => {\r\n    let newSize = { ...this.state.size };\r\n    newSize.rows = newSize.rows + addition;\r\n\r\n    let newGrid = [...this.state.grid, Array(newSize.cols).fill(0)];\r\n\r\n    this.setState({ size: newSize, grid: newGrid });\r\n  };\r\n\r\n  resizeRowAndColHandler = (addition) => {\r\n    this.resizeRowsHandler(addition);\r\n    this.resizeColsHandler(addition);\r\n  };\r\n\r\n  placePatternsHadler = (pattern) => {\r\n    let newGrid = [...this.state.grid];\r\n    let block = this.state.PatternFactory.buildAPatternByName(pattern);\r\n    const starting_row = 5;\r\n    const starting_col = 5;\r\n    let k = 0;\r\n    let l = 0;\r\n    for (let i = 5; i < starting_row + block.length; i++) {\r\n      for (let j = 5; j < block[l].length + starting_col; j++) {\r\n        newGrid[i][j] = block[l][k];\r\n        k++;\r\n      }\r\n      k = 0;\r\n      l++;\r\n    }\r\n    this.setState({ grid: newGrid });\r\n  };\r\n\r\n  resetBoard = () => {\r\n    this.stopGame();\r\n    let newGrid = Array(50)\r\n      .fill()\r\n      .map(() => Array(70).fill(0));\r\n    this.setState({ grid: newGrid });\r\n  };\r\n\r\n  playGame = () => {\r\n    this.setState({ run: true });\r\n    this.timerID = setInterval(() => this.oneCycle(), this.state.Delay);\r\n  };\r\n\r\n  stopGame = () => {\r\n    this.setState({ run: false });\r\n    clearInterval(this.timerID);\r\n  };\r\n\r\n  setRandomBoard = () => {\r\n    let newGrid = Array(50)\r\n      .fill()\r\n      .map(() => Array(70).fill(0));\r\n    for (let i = 0; i < newGrid.length; i++) {\r\n      for (let j = 0; j < newGrid[i].length; j++) {\r\n        newGrid[i][j] = Math.floor(Math.random() * 2);\r\n      }\r\n    }\r\n    this.setState({ grid: newGrid });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{backgroundColor: \"AliceBlue\"}}>\r\n        <Header \r\n          as=\"h1\"\r\n          color=\"violet\"\r\n          dividing\r\n          textAlign=\"center\"\r\n          attached=\"bottom\"\r\n          content=\"Conway's Game of Life\"\r\n          subheader=\"By Itzik Fadida, May 2020\"\r\n        />\r\n        <Board\r\n          grid={this.state.grid}\r\n          squareOnClickHandler={this.onClickSquareHandler}\r\n          oneCycle={this.oneCycle}\r\n        />\r\n        <BoardConrtols className=\"Controls\"\r\n        updateBorn={this.updateBornHandler}\r\n        bornList={this.state.born}\r\n        updateSurvive={this.updateSurviveHandler}\r\n        surviveList={this.state.survive}\r\n        addRow={() => this.resizeRowsHandler(1)}\r\n        addCol={() => this.resizeColsHandler(1)}\r\n        addRowCol={() => this.resizeRowAndColHandler(1)}\r\n        resetBoard={this.resetBoard}\r\n        playGame={this.playGame}\r\n        stopGame={this.stopGame}\r\n        setRandomBoard={this.setRandomBoard}\r\n        placePatternsHadler={this.placePatternsHadler}\r\n        oneRound={this.oneCycle}\r\n      />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameOfLife;\r\n","import React, { Component } from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport GameOfLife from \"./containers/GameOfLife\";\nclass App extends Component {\n  render() {\n    return (\n        <Layout>\n          <GameOfLife />\n        </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}